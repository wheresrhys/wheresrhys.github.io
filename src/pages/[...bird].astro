---
import { getCollection, render } from 'astro:content'
import readingTime from 'reading-time'
import BaseLayout from '../layouts/BaseLayout.astro';
import {generateBlogPostURL} from './utils';
const months = ["January", 'February','March', 'April', 'May', "June", 'July', 'August', 'September', 'October', 'November', 'December']
function humanDate (date) {
  return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`
}
export async function getStaticPaths() {
  let birds = await getCollection('birds')
  birds = birds.sort((a, b) => new Date(a.data.date).valueOf() - new Date(b.data.date).valueOf())
  return birds.map((p, i) => ({
    params: { bird: generateBlogPostURL(p)},
    props: {
      post: p,
      nextPost: birds[i+1],
      previousPost: birds[i-1],
      related: p.data.tags.filter(tag => tag !== p.data.primaryTag).map(species => ({
        species,
        post: birds.find(({data: {primaryTag}}) => primaryTag === species)
      }))
    },
  }));
}

const { post, nextPost, previousPost, related } = Astro.props
const { title, description, date } = post.data;
const readingTimeEstimate = readingTime(post.body).text
const permalink = `${Astro.site.href}61-boring-birds/${generateBlogPostURL(post)}`;
const { Content } = await render(post)
---

<BaseLayout title={title} description={description} permalink={permalink} current="61-boring-birds">
  <header>
    <p>{humanDate(date)} ~ {readingTimeEstimate}</p>
    <h1>{title}</h1>
    <hr />
  </header>
  <div class="container">
    <article class="content">
      <Content />
    </article>

<p>
{nextPost ? <>ðŸ¦¢ <a href={`/${generateBlogPostURL(nextPost)}`}>Next boring bird</a><br/></>: null}
{previousPost ? <>ðŸ¦… <a href={`/${generateBlogPostURL(previousPost)}`}>Previous boring bird</a><br/></>: null}
{related.length ? <>Related boring birds:  {related.map(({species, post}, i) => <>{i > 0 ? ", ": ''}{post ? <a href={`/${generateBlogPostURL(post)}`}>{species}</a>: species}</>)}<br/></> : null}
ðŸ¦š <a href="/61-boring-birds">All boring birds</a><br/>
</p>

  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
